<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <import type="android.view.View" />

        <import type="com.bravedroid.domain.SubmitUiModel.ResponseState" />

        <variable
            name="vm"
            type="com.bravedroid.presentation.feature.reader.CoverScreenVM" />

        <variable
            name="listener"
            type="com.bravedroid.presentation.feature.reader.CoverScreenFragment.Listener" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <ImageView
            android:id="@+id/imageCover"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:scaleType="centerCrop"
            app:imageUrl="@{vm.model.data.urlImageCover}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:requestListener="@{vm.requestListener}"
            tools:src="@drawable/cover_placeholder" />

        <ProgressBar
            android:id="@+id/progressBar"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:visibility="@{vm.imageCoverVisible? View.GONE : View.VISIBLE}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            tools:visibility="visible" />

        <TextView
            android:id="@+id/titleTextView"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginLeft="16dp"
            android:layout_marginRight="16dp"
            android:layout_marginBottom="4dp"
            android:text="@{vm.model.data.title}"
            android:textColor="#FFF"
            android:textSize="24sp"
            android:textStyle="bold"
            app:layout_constraintBottom_toTopOf="@id/descriptionTextView"
            app:layout_constraintLeft_toLeftOf="parent"
            tools:text="Scavenger Hunt" />

        <TextView
            android:id="@+id/descriptionTextView"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="16dp"
            android:ellipsize="end"
            android:maxLines="4"
            android:text="@{vm.model.data.description}"
            android:textColor="#FFF"
            android:textSize="20dp"
            app:layout_constraintBottom_toTopOf="@id/arrowButton"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            tools:text="At first I thought this unknow numer was a total creeper, but then  something sort of magical happened." />

        <ImageView
            android:id="@+id/arrowButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginBottom="16dp"
            android:contentDescription="arrow buttom"
            android:onClick="@{() -> listener.onInitiateStory(vm.model.data.id)}"
            android:padding="8dp"
            android:src="@drawable/ic_arrow_blue_down"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent" />

        <ImageView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:scaleType="centerCrop"
            android:src="@drawable/cover_placeholder"
            android:visibility="@{vm.model.responseState == ResponseState.LOADING ? View.VISIBLE : View.GONE }"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            tools:visibility="gone" />

        <ProgressBar
            android:id="@+id/progressBar2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:visibility="@{vm.model.responseState == ResponseState.LOADING ? View.VISIBLE : View.GONE}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.8"
            tools:visibility="invisible" />

        <ImageView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:scaleType="centerCrop"
            android:src="@drawable/cover_error"
            android:visibility="@{vm.model.responseState == ResponseState.ERROR ? View.VISIBLE : View.GONE }"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            tools:visibility="gone" />

        <TextView
            android:id="@+id/retryTextButton"
            style="@style/Widget.AppCompat.Button.Borderless.Colored"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:onClick="@{() -> vm.onRetryClick()}"
            android:padding="10dp"
            android:text="@string/retry_text_button"
            android:textAllCaps="false"
            android:textColor="#FFFFFF"
            android:textSize="20sp"
            android:visibility="@{vm.model.responseState == ResponseState.ERROR ? View.VISIBLE : View.GONE }"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.8" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>
